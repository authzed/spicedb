// Code generated by "stringer -type=NodeType -output zz_generated.nodetype_string.go"; DO NOT EDIT.

package dslshape

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NodeTypeError-0]
	_ = x[NodeTypeFile-1]
	_ = x[NodeTypeComment-2]
	_ = x[NodeTypeDefinition-3]
	_ = x[NodeTypeRelation-4]
	_ = x[NodeTypePermission-5]
	_ = x[NodeTypeDecorator-6]
	_ = x[NodeTypeDecoratorOptions-7]
	_ = x[NodeTypeTypeReference-8]
	_ = x[NodeTypeSpecificTypeReference-9]
	_ = x[NodeTypeUnionExpression-10]
	_ = x[NodeTypeIntersectExpression-11]
	_ = x[NodeTypeExclusionExpression-12]
	_ = x[NodeTypeArrowExpression-13]
	_ = x[NodeTypeIdentifier-14]
}

const _NodeType_name = "NodeTypeErrorNodeTypeFileNodeTypeCommentNodeTypeDefinitionNodeTypeRelationNodeTypePermissionNodeTypeDecoratorNodeTypeDecoratorOptionsNodeTypeTypeReferenceNodeTypeSpecificTypeReferenceNodeTypeUnionExpressionNodeTypeIntersectExpressionNodeTypeExclusionExpressionNodeTypeArrowExpressionNodeTypeIdentifier"

var _NodeType_index = [...]uint16{0, 13, 25, 40, 58, 74, 92, 109, 133, 154, 183, 206, 233, 260, 283, 301}

func (i NodeType) String() string {
	if i < 0 || i >= NodeType(len(_NodeType_index)-1) {
		return "NodeType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NodeType_name[_NodeType_index[i]:_NodeType_index[i+1]]
}
