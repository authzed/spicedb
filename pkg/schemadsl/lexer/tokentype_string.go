// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package lexer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TokenTypeError-0]
	_ = x[TokenTypeSyntheticSemicolon-1]
	_ = x[TokenTypeEOF-2]
	_ = x[TokenTypeWhitespace-3]
	_ = x[TokenTypeSinglelineComment-4]
	_ = x[TokenTypeMultilineComment-5]
	_ = x[TokenTypeNewline-6]
	_ = x[TokenTypeKeyword-7]
	_ = x[TokenTypeIdentifier-8]
	_ = x[TokenTypeNumber-9]
	_ = x[TokenTypeLeftBrace-10]
	_ = x[TokenTypeRightBrace-11]
	_ = x[TokenTypeLeftParen-12]
	_ = x[TokenTypeRightParen-13]
	_ = x[TokenTypePipe-14]
	_ = x[TokenTypePlus-15]
	_ = x[TokenTypeMinus-16]
	_ = x[TokenTypeAnd-17]
	_ = x[TokenTypeDiv-18]
	_ = x[TokenTypeEquals-19]
	_ = x[TokenTypeColon-20]
	_ = x[TokenTypeSemicolon-21]
	_ = x[TokenTypeRightArrow-22]
	_ = x[TokenTypeHash-23]
	_ = x[TokenTypeEllipsis-24]
	_ = x[TokenTypeStar-25]
	_ = x[TokenTypeQuestionMark-26]
	_ = x[TokenTypeConditionalOr-27]
	_ = x[TokenTypeConditionalAnd-28]
	_ = x[TokenTypeExclamationPoint-29]
	_ = x[TokenTypeLeftBracket-30]
	_ = x[TokenTypeRightBracket-31]
	_ = x[TokenTypePeriod-32]
	_ = x[TokenTypeComma-33]
	_ = x[TokenTypePercent-34]
	_ = x[TokenTypeLessThan-35]
	_ = x[TokenTypeGreaterThan-36]
	_ = x[TokenTypeLessThanOrEqual-37]
	_ = x[TokenTypeGreaterThanOrEqual-38]
	_ = x[TokenTypeEqualEqual-39]
	_ = x[TokenTypeNotEqual-40]
	_ = x[TokenTypeString-41]
}

const _TokenType_name = "TokenTypeErrorTokenTypeSyntheticSemicolonTokenTypeEOFTokenTypeWhitespaceTokenTypeSinglelineCommentTokenTypeMultilineCommentTokenTypeNewlineTokenTypeKeywordTokenTypeIdentifierTokenTypeNumberTokenTypeLeftBraceTokenTypeRightBraceTokenTypeLeftParenTokenTypeRightParenTokenTypePipeTokenTypePlusTokenTypeMinusTokenTypeAndTokenTypeDivTokenTypeEqualsTokenTypeColonTokenTypeSemicolonTokenTypeRightArrowTokenTypeHashTokenTypeEllipsisTokenTypeStarTokenTypeQuestionMarkTokenTypeConditionalOrTokenTypeConditionalAndTokenTypeExclamationPointTokenTypeLeftBracketTokenTypeRightBracketTokenTypePeriodTokenTypeCommaTokenTypePercentTokenTypeLessThanTokenTypeGreaterThanTokenTypeLessThanOrEqualTokenTypeGreaterThanOrEqualTokenTypeEqualEqualTokenTypeNotEqualTokenTypeString"

var _TokenType_index = [...]uint16{0, 14, 41, 53, 72, 98, 123, 139, 155, 174, 189, 207, 226, 244, 263, 276, 289, 303, 315, 327, 342, 356, 374, 393, 406, 423, 436, 457, 479, 502, 527, 547, 568, 583, 597, 613, 630, 650, 674, 701, 720, 737, 752}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
