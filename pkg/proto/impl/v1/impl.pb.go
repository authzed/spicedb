// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: impl/v1/impl.proto

package implv1

import (
	v1alpha1 "google.golang.org/genproto/googleapis/api/expr/v1alpha1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RelationMetadata_RelationKind int32

const (
	RelationMetadata_UNKNOWN_KIND RelationMetadata_RelationKind = 0
	RelationMetadata_RELATION     RelationMetadata_RelationKind = 1
	RelationMetadata_PERMISSION   RelationMetadata_RelationKind = 2
)

// Enum value maps for RelationMetadata_RelationKind.
var (
	RelationMetadata_RelationKind_name = map[int32]string{
		0: "UNKNOWN_KIND",
		1: "RELATION",
		2: "PERMISSION",
	}
	RelationMetadata_RelationKind_value = map[string]int32{
		"UNKNOWN_KIND": 0,
		"RELATION":     1,
		"PERMISSION":   2,
	}
)

func (x RelationMetadata_RelationKind) Enum() *RelationMetadata_RelationKind {
	p := new(RelationMetadata_RelationKind)
	*p = x
	return p
}

func (x RelationMetadata_RelationKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RelationMetadata_RelationKind) Descriptor() protoreflect.EnumDescriptor {
	return file_impl_v1_impl_proto_enumTypes[0].Descriptor()
}

func (RelationMetadata_RelationKind) Type() protoreflect.EnumType {
	return &file_impl_v1_impl_proto_enumTypes[0]
}

func (x RelationMetadata_RelationKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RelationMetadata_RelationKind.Descriptor instead.
func (RelationMetadata_RelationKind) EnumDescriptor() ([]byte, []int) {
	return file_impl_v1_impl_proto_rawDescGZIP(), []int{7, 0}
}

type DecodedCaveat struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// we do kind_oneof in case we decide to have non-CEL expressions
	//
	// Types that are valid to be assigned to KindOneof:
	//
	//	*DecodedCaveat_Cel
	KindOneof     isDecodedCaveat_KindOneof `protobuf_oneof:"kind_oneof"`
	Name          string                    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecodedCaveat) Reset() {
	*x = DecodedCaveat{}
	mi := &file_impl_v1_impl_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodedCaveat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodedCaveat) ProtoMessage() {}

func (x *DecodedCaveat) ProtoReflect() protoreflect.Message {
	mi := &file_impl_v1_impl_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodedCaveat.ProtoReflect.Descriptor instead.
func (*DecodedCaveat) Descriptor() ([]byte, []int) {
	return file_impl_v1_impl_proto_rawDescGZIP(), []int{0}
}

func (x *DecodedCaveat) GetKindOneof() isDecodedCaveat_KindOneof {
	if x != nil {
		return x.KindOneof
	}
	return nil
}

func (x *DecodedCaveat) GetCel() *v1alpha1.CheckedExpr {
	if x != nil {
		if x, ok := x.KindOneof.(*DecodedCaveat_Cel); ok {
			return x.Cel
		}
	}
	return nil
}

func (x *DecodedCaveat) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type isDecodedCaveat_KindOneof interface {
	isDecodedCaveat_KindOneof()
}

type DecodedCaveat_Cel struct {
	Cel *v1alpha1.CheckedExpr `protobuf:"bytes,1,opt,name=cel,proto3,oneof"`
}

func (*DecodedCaveat_Cel) isDecodedCaveat_KindOneof() {}

type DecodedZookie struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Version uint32                 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	// Types that are valid to be assigned to VersionOneof:
	//
	//	*DecodedZookie_V1
	//	*DecodedZookie_V2
	VersionOneof  isDecodedZookie_VersionOneof `protobuf_oneof:"version_oneof"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecodedZookie) Reset() {
	*x = DecodedZookie{}
	mi := &file_impl_v1_impl_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodedZookie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodedZookie) ProtoMessage() {}

func (x *DecodedZookie) ProtoReflect() protoreflect.Message {
	mi := &file_impl_v1_impl_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodedZookie.ProtoReflect.Descriptor instead.
func (*DecodedZookie) Descriptor() ([]byte, []int) {
	return file_impl_v1_impl_proto_rawDescGZIP(), []int{1}
}

func (x *DecodedZookie) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *DecodedZookie) GetVersionOneof() isDecodedZookie_VersionOneof {
	if x != nil {
		return x.VersionOneof
	}
	return nil
}

func (x *DecodedZookie) GetV1() *DecodedZookie_V1Zookie {
	if x != nil {
		if x, ok := x.VersionOneof.(*DecodedZookie_V1); ok {
			return x.V1
		}
	}
	return nil
}

func (x *DecodedZookie) GetV2() *DecodedZookie_V2Zookie {
	if x != nil {
		if x, ok := x.VersionOneof.(*DecodedZookie_V2); ok {
			return x.V2
		}
	}
	return nil
}

type isDecodedZookie_VersionOneof interface {
	isDecodedZookie_VersionOneof()
}

type DecodedZookie_V1 struct {
	V1 *DecodedZookie_V1Zookie `protobuf:"bytes,2,opt,name=v1,proto3,oneof"`
}

type DecodedZookie_V2 struct {
	V2 *DecodedZookie_V2Zookie `protobuf:"bytes,3,opt,name=v2,proto3,oneof"`
}

func (*DecodedZookie_V1) isDecodedZookie_VersionOneof() {}

func (*DecodedZookie_V2) isDecodedZookie_VersionOneof() {}

type DecodedZedToken struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to VersionOneof:
	//
	//	*DecodedZedToken_DeprecatedV1Zookie
	//	*DecodedZedToken_V1
	VersionOneof  isDecodedZedToken_VersionOneof `protobuf_oneof:"version_oneof"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecodedZedToken) Reset() {
	*x = DecodedZedToken{}
	mi := &file_impl_v1_impl_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodedZedToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodedZedToken) ProtoMessage() {}

func (x *DecodedZedToken) ProtoReflect() protoreflect.Message {
	mi := &file_impl_v1_impl_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodedZedToken.ProtoReflect.Descriptor instead.
func (*DecodedZedToken) Descriptor() ([]byte, []int) {
	return file_impl_v1_impl_proto_rawDescGZIP(), []int{2}
}

func (x *DecodedZedToken) GetVersionOneof() isDecodedZedToken_VersionOneof {
	if x != nil {
		return x.VersionOneof
	}
	return nil
}

func (x *DecodedZedToken) GetDeprecatedV1Zookie() *DecodedZedToken_V1Zookie {
	if x != nil {
		if x, ok := x.VersionOneof.(*DecodedZedToken_DeprecatedV1Zookie); ok {
			return x.DeprecatedV1Zookie
		}
	}
	return nil
}

func (x *DecodedZedToken) GetV1() *DecodedZedToken_V1ZedToken {
	if x != nil {
		if x, ok := x.VersionOneof.(*DecodedZedToken_V1); ok {
			return x.V1
		}
	}
	return nil
}

type isDecodedZedToken_VersionOneof interface {
	isDecodedZedToken_VersionOneof()
}

type DecodedZedToken_DeprecatedV1Zookie struct {
	DeprecatedV1Zookie *DecodedZedToken_V1Zookie `protobuf:"bytes,2,opt,name=deprecated_v1_zookie,json=deprecatedV1Zookie,proto3,oneof"`
}

type DecodedZedToken_V1 struct {
	V1 *DecodedZedToken_V1ZedToken `protobuf:"bytes,3,opt,name=v1,proto3,oneof"`
}

func (*DecodedZedToken_DeprecatedV1Zookie) isDecodedZedToken_VersionOneof() {}

func (*DecodedZedToken_V1) isDecodedZedToken_VersionOneof() {}

type DecodedCursor struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// we do version_oneof in case we decide to add a new version.
	//
	// Types that are valid to be assigned to VersionOneof:
	//
	//	*DecodedCursor_V1
	VersionOneof  isDecodedCursor_VersionOneof `protobuf_oneof:"version_oneof"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecodedCursor) Reset() {
	*x = DecodedCursor{}
	mi := &file_impl_v1_impl_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodedCursor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodedCursor) ProtoMessage() {}

func (x *DecodedCursor) ProtoReflect() protoreflect.Message {
	mi := &file_impl_v1_impl_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodedCursor.ProtoReflect.Descriptor instead.
func (*DecodedCursor) Descriptor() ([]byte, []int) {
	return file_impl_v1_impl_proto_rawDescGZIP(), []int{3}
}

func (x *DecodedCursor) GetVersionOneof() isDecodedCursor_VersionOneof {
	if x != nil {
		return x.VersionOneof
	}
	return nil
}

func (x *DecodedCursor) GetV1() *V1Cursor {
	if x != nil {
		if x, ok := x.VersionOneof.(*DecodedCursor_V1); ok {
			return x.V1
		}
	}
	return nil
}

type isDecodedCursor_VersionOneof interface {
	isDecodedCursor_VersionOneof()
}

type DecodedCursor_V1 struct {
	V1 *V1Cursor `protobuf:"bytes,1,opt,name=v1,proto3,oneof"`
}

func (*DecodedCursor_V1) isDecodedCursor_VersionOneof() {}

type V1Cursor struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// revision is the string form of the revision for the cursor.
	Revision string `protobuf:"bytes,1,opt,name=revision,proto3" json:"revision,omitempty"`
	// sections are the sections of the dispatching cursor.
	Sections []string `protobuf:"bytes,2,rep,name=sections,proto3" json:"sections,omitempty"`
	// call_and_parameters_hash is a hash of the call that manufactured this cursor and all its
	// parameters, including limits and zedtoken, to ensure no inputs changed when using this cursor.
	CallAndParametersHash string `protobuf:"bytes,3,opt,name=call_and_parameters_hash,json=callAndParametersHash,proto3" json:"call_and_parameters_hash,omitempty"`
	// dispatch_version is the version of the dispatcher which created the cursor.
	DispatchVersion uint32 `protobuf:"varint,4,opt,name=dispatch_version,json=dispatchVersion,proto3" json:"dispatch_version,omitempty"`
	// flags are flags set by the API caller.
	Flags map[string]string `protobuf:"bytes,5,rep,name=flags,proto3" json:"flags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// datastore_unique_id is the unique ID for the datastore. Will be empty for legacy
	// cursors.
	DatastoreUniqueId string `protobuf:"bytes,6,opt,name=datastore_unique_id,json=datastoreUniqueId,proto3" json:"datastore_unique_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *V1Cursor) Reset() {
	*x = V1Cursor{}
	mi := &file_impl_v1_impl_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *V1Cursor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*V1Cursor) ProtoMessage() {}

func (x *V1Cursor) ProtoReflect() protoreflect.Message {
	mi := &file_impl_v1_impl_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use V1Cursor.ProtoReflect.Descriptor instead.
func (*V1Cursor) Descriptor() ([]byte, []int) {
	return file_impl_v1_impl_proto_rawDescGZIP(), []int{4}
}

func (x *V1Cursor) GetRevision() string {
	if x != nil {
		return x.Revision
	}
	return ""
}

func (x *V1Cursor) GetSections() []string {
	if x != nil {
		return x.Sections
	}
	return nil
}

func (x *V1Cursor) GetCallAndParametersHash() string {
	if x != nil {
		return x.CallAndParametersHash
	}
	return ""
}

func (x *V1Cursor) GetDispatchVersion() uint32 {
	if x != nil {
		return x.DispatchVersion
	}
	return 0
}

func (x *V1Cursor) GetFlags() map[string]string {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *V1Cursor) GetDatastoreUniqueId() string {
	if x != nil {
		return x.DatastoreUniqueId
	}
	return ""
}

type DocComment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comment       string                 `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DocComment) Reset() {
	*x = DocComment{}
	mi := &file_impl_v1_impl_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocComment) ProtoMessage() {}

func (x *DocComment) ProtoReflect() protoreflect.Message {
	mi := &file_impl_v1_impl_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocComment.ProtoReflect.Descriptor instead.
func (*DocComment) Descriptor() ([]byte, []int) {
	return file_impl_v1_impl_proto_rawDescGZIP(), []int{5}
}

func (x *DocComment) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type TypeAnnotations struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Types         []string               `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TypeAnnotations) Reset() {
	*x = TypeAnnotations{}
	mi := &file_impl_v1_impl_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TypeAnnotations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeAnnotations) ProtoMessage() {}

func (x *TypeAnnotations) ProtoReflect() protoreflect.Message {
	mi := &file_impl_v1_impl_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeAnnotations.ProtoReflect.Descriptor instead.
func (*TypeAnnotations) Descriptor() ([]byte, []int) {
	return file_impl_v1_impl_proto_rawDescGZIP(), []int{6}
}

func (x *TypeAnnotations) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

type RelationMetadata struct {
	state           protoimpl.MessageState        `protogen:"open.v1"`
	Kind            RelationMetadata_RelationKind `protobuf:"varint,1,opt,name=kind,proto3,enum=impl.v1.RelationMetadata_RelationKind" json:"kind,omitempty"`
	TypeAnnotations *TypeAnnotations              `protobuf:"bytes,2,opt,name=type_annotations,json=typeAnnotations,proto3" json:"type_annotations,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RelationMetadata) Reset() {
	*x = RelationMetadata{}
	mi := &file_impl_v1_impl_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationMetadata) ProtoMessage() {}

func (x *RelationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_impl_v1_impl_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationMetadata.ProtoReflect.Descriptor instead.
func (*RelationMetadata) Descriptor() ([]byte, []int) {
	return file_impl_v1_impl_proto_rawDescGZIP(), []int{7}
}

func (x *RelationMetadata) GetKind() RelationMetadata_RelationKind {
	if x != nil {
		return x.Kind
	}
	return RelationMetadata_UNKNOWN_KIND
}

func (x *RelationMetadata) GetTypeAnnotations() *TypeAnnotations {
	if x != nil {
		return x.TypeAnnotations
	}
	return nil
}

type NamespaceAndRevision struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	Revision      string                 `protobuf:"bytes,2,opt,name=revision,proto3" json:"revision,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NamespaceAndRevision) Reset() {
	*x = NamespaceAndRevision{}
	mi := &file_impl_v1_impl_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamespaceAndRevision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceAndRevision) ProtoMessage() {}

func (x *NamespaceAndRevision) ProtoReflect() protoreflect.Message {
	mi := &file_impl_v1_impl_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceAndRevision.ProtoReflect.Descriptor instead.
func (*NamespaceAndRevision) Descriptor() ([]byte, []int) {
	return file_impl_v1_impl_proto_rawDescGZIP(), []int{8}
}

func (x *NamespaceAndRevision) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *NamespaceAndRevision) GetRevision() string {
	if x != nil {
		return x.Revision
	}
	return ""
}

type V1Alpha1Revision struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	NsRevisions   []*NamespaceAndRevision `protobuf:"bytes,1,rep,name=ns_revisions,json=nsRevisions,proto3" json:"ns_revisions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *V1Alpha1Revision) Reset() {
	*x = V1Alpha1Revision{}
	mi := &file_impl_v1_impl_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *V1Alpha1Revision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*V1Alpha1Revision) ProtoMessage() {}

func (x *V1Alpha1Revision) ProtoReflect() protoreflect.Message {
	mi := &file_impl_v1_impl_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use V1Alpha1Revision.ProtoReflect.Descriptor instead.
func (*V1Alpha1Revision) Descriptor() ([]byte, []int) {
	return file_impl_v1_impl_proto_rawDescGZIP(), []int{9}
}

func (x *V1Alpha1Revision) GetNsRevisions() []*NamespaceAndRevision {
	if x != nil {
		return x.NsRevisions
	}
	return nil
}

type DecodedZookie_V1Zookie struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Revision      uint64                 `protobuf:"varint,1,opt,name=revision,proto3" json:"revision,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecodedZookie_V1Zookie) Reset() {
	*x = DecodedZookie_V1Zookie{}
	mi := &file_impl_v1_impl_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodedZookie_V1Zookie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodedZookie_V1Zookie) ProtoMessage() {}

func (x *DecodedZookie_V1Zookie) ProtoReflect() protoreflect.Message {
	mi := &file_impl_v1_impl_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodedZookie_V1Zookie.ProtoReflect.Descriptor instead.
func (*DecodedZookie_V1Zookie) Descriptor() ([]byte, []int) {
	return file_impl_v1_impl_proto_rawDescGZIP(), []int{1, 0}
}

func (x *DecodedZookie_V1Zookie) GetRevision() uint64 {
	if x != nil {
		return x.Revision
	}
	return 0
}

type DecodedZookie_V2Zookie struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Revision      string                 `protobuf:"bytes,1,opt,name=revision,proto3" json:"revision,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecodedZookie_V2Zookie) Reset() {
	*x = DecodedZookie_V2Zookie{}
	mi := &file_impl_v1_impl_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodedZookie_V2Zookie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodedZookie_V2Zookie) ProtoMessage() {}

func (x *DecodedZookie_V2Zookie) ProtoReflect() protoreflect.Message {
	mi := &file_impl_v1_impl_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodedZookie_V2Zookie.ProtoReflect.Descriptor instead.
func (*DecodedZookie_V2Zookie) Descriptor() ([]byte, []int) {
	return file_impl_v1_impl_proto_rawDescGZIP(), []int{1, 1}
}

func (x *DecodedZookie_V2Zookie) GetRevision() string {
	if x != nil {
		return x.Revision
	}
	return ""
}

type DecodedZedToken_V1Zookie struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Revision      uint64                 `protobuf:"varint,1,opt,name=revision,proto3" json:"revision,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecodedZedToken_V1Zookie) Reset() {
	*x = DecodedZedToken_V1Zookie{}
	mi := &file_impl_v1_impl_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodedZedToken_V1Zookie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodedZedToken_V1Zookie) ProtoMessage() {}

func (x *DecodedZedToken_V1Zookie) ProtoReflect() protoreflect.Message {
	mi := &file_impl_v1_impl_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodedZedToken_V1Zookie.ProtoReflect.Descriptor instead.
func (*DecodedZedToken_V1Zookie) Descriptor() ([]byte, []int) {
	return file_impl_v1_impl_proto_rawDescGZIP(), []int{2, 0}
}

func (x *DecodedZedToken_V1Zookie) GetRevision() uint64 {
	if x != nil {
		return x.Revision
	}
	return 0
}

type DecodedZedToken_V1ZedToken struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Revision string                 `protobuf:"bytes,1,opt,name=revision,proto3" json:"revision,omitempty"`
	// datastore_unique_id_prefix is a prefix of the unique ID for the datastore that created
	// this token. Will be empty for legacy tokens.
	DatastoreUniqueIdPrefix string `protobuf:"bytes,2,opt,name=datastore_unique_id_prefix,json=datastoreUniqueIdPrefix,proto3" json:"datastore_unique_id_prefix,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *DecodedZedToken_V1ZedToken) Reset() {
	*x = DecodedZedToken_V1ZedToken{}
	mi := &file_impl_v1_impl_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodedZedToken_V1ZedToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodedZedToken_V1ZedToken) ProtoMessage() {}

func (x *DecodedZedToken_V1ZedToken) ProtoReflect() protoreflect.Message {
	mi := &file_impl_v1_impl_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodedZedToken_V1ZedToken.ProtoReflect.Descriptor instead.
func (*DecodedZedToken_V1ZedToken) Descriptor() ([]byte, []int) {
	return file_impl_v1_impl_proto_rawDescGZIP(), []int{2, 1}
}

func (x *DecodedZedToken_V1ZedToken) GetRevision() string {
	if x != nil {
		return x.Revision
	}
	return ""
}

func (x *DecodedZedToken_V1ZedToken) GetDatastoreUniqueIdPrefix() string {
	if x != nil {
		return x.DatastoreUniqueIdPrefix
	}
	return ""
}

var File_impl_v1_impl_proto protoreflect.FileDescriptor

const file_impl_v1_impl_proto_rawDesc = "" +
	"\n" +
	"\x12impl/v1/impl.proto\x12\aimpl.v1\x1a&google/api/expr/v1alpha1/checked.proto\"l\n" +
	"\rDecodedCaveat\x129\n" +
	"\x03cel\x18\x01 \x01(\v2%.google.api.expr.v1alpha1.CheckedExprH\x00R\x03cel\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04nameB\f\n" +
	"\n" +
	"kind_oneof\"\xf0\x01\n" +
	"\rDecodedZookie\x12\x18\n" +
	"\aversion\x18\x01 \x01(\rR\aversion\x121\n" +
	"\x02v1\x18\x02 \x01(\v2\x1f.impl.v1.DecodedZookie.V1ZookieH\x00R\x02v1\x121\n" +
	"\x02v2\x18\x03 \x01(\v2\x1f.impl.v1.DecodedZookie.V2ZookieH\x00R\x02v2\x1a&\n" +
	"\bV1Zookie\x12\x1a\n" +
	"\brevision\x18\x01 \x01(\x04R\brevision\x1a&\n" +
	"\bV2Zookie\x12\x1a\n" +
	"\brevision\x18\x01 \x01(\tR\brevisionB\x0f\n" +
	"\rversion_oneof\"\xbf\x02\n" +
	"\x0fDecodedZedToken\x12U\n" +
	"\x14deprecated_v1_zookie\x18\x02 \x01(\v2!.impl.v1.DecodedZedToken.V1ZookieH\x00R\x12deprecatedV1Zookie\x125\n" +
	"\x02v1\x18\x03 \x01(\v2#.impl.v1.DecodedZedToken.V1ZedTokenH\x00R\x02v1\x1a&\n" +
	"\bV1Zookie\x12\x1a\n" +
	"\brevision\x18\x01 \x01(\x04R\brevision\x1ae\n" +
	"\n" +
	"V1ZedToken\x12\x1a\n" +
	"\brevision\x18\x01 \x01(\tR\brevision\x12;\n" +
	"\x1adatastore_unique_id_prefix\x18\x02 \x01(\tR\x17datastoreUniqueIdPrefixB\x0f\n" +
	"\rversion_oneof\"E\n" +
	"\rDecodedCursor\x12#\n" +
	"\x02v1\x18\x01 \x01(\v2\x11.impl.v1.V1CursorH\x00R\x02v1B\x0f\n" +
	"\rversion_oneof\"\xc4\x02\n" +
	"\bV1Cursor\x12\x1a\n" +
	"\brevision\x18\x01 \x01(\tR\brevision\x12\x1a\n" +
	"\bsections\x18\x02 \x03(\tR\bsections\x127\n" +
	"\x18call_and_parameters_hash\x18\x03 \x01(\tR\x15callAndParametersHash\x12)\n" +
	"\x10dispatch_version\x18\x04 \x01(\rR\x0fdispatchVersion\x122\n" +
	"\x05flags\x18\x05 \x03(\v2\x1c.impl.v1.V1Cursor.FlagsEntryR\x05flags\x12.\n" +
	"\x13datastore_unique_id\x18\x06 \x01(\tR\x11datastoreUniqueId\x1a8\n" +
	"\n" +
	"FlagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"&\n" +
	"\n" +
	"DocComment\x12\x18\n" +
	"\acomment\x18\x01 \x01(\tR\acomment\"'\n" +
	"\x0fTypeAnnotations\x12\x14\n" +
	"\x05types\x18\x01 \x03(\tR\x05types\"\xd3\x01\n" +
	"\x10RelationMetadata\x12:\n" +
	"\x04kind\x18\x01 \x01(\x0e2&.impl.v1.RelationMetadata.RelationKindR\x04kind\x12C\n" +
	"\x10type_annotations\x18\x02 \x01(\v2\x18.impl.v1.TypeAnnotationsR\x0ftypeAnnotations\">\n" +
	"\fRelationKind\x12\x10\n" +
	"\fUNKNOWN_KIND\x10\x00\x12\f\n" +
	"\bRELATION\x10\x01\x12\x0e\n" +
	"\n" +
	"PERMISSION\x10\x02\"Y\n" +
	"\x14NamespaceAndRevision\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\x12\x1a\n" +
	"\brevision\x18\x02 \x01(\tR\brevision\"T\n" +
	"\x10V1Alpha1Revision\x12@\n" +
	"\fns_revisions\x18\x01 \x03(\v2\x1d.impl.v1.NamespaceAndRevisionR\vnsRevisionsB\x8a\x01\n" +
	"\vcom.impl.v1B\tImplProtoP\x01Z3github.com/authzed/spicedb/pkg/proto/impl/v1;implv1\xa2\x02\x03IXX\xaa\x02\aImpl.V1\xca\x02\aImpl\\V1\xe2\x02\x13Impl\\V1\\GPBMetadata\xea\x02\bImpl::V1b\x06proto3"

var (
	file_impl_v1_impl_proto_rawDescOnce sync.Once
	file_impl_v1_impl_proto_rawDescData []byte
)

func file_impl_v1_impl_proto_rawDescGZIP() []byte {
	file_impl_v1_impl_proto_rawDescOnce.Do(func() {
		file_impl_v1_impl_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_impl_v1_impl_proto_rawDesc), len(file_impl_v1_impl_proto_rawDesc)))
	})
	return file_impl_v1_impl_proto_rawDescData
}

var file_impl_v1_impl_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_impl_v1_impl_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_impl_v1_impl_proto_goTypes = []any{
	(RelationMetadata_RelationKind)(0), // 0: impl.v1.RelationMetadata.RelationKind
	(*DecodedCaveat)(nil),              // 1: impl.v1.DecodedCaveat
	(*DecodedZookie)(nil),              // 2: impl.v1.DecodedZookie
	(*DecodedZedToken)(nil),            // 3: impl.v1.DecodedZedToken
	(*DecodedCursor)(nil),              // 4: impl.v1.DecodedCursor
	(*V1Cursor)(nil),                   // 5: impl.v1.V1Cursor
	(*DocComment)(nil),                 // 6: impl.v1.DocComment
	(*TypeAnnotations)(nil),            // 7: impl.v1.TypeAnnotations
	(*RelationMetadata)(nil),           // 8: impl.v1.RelationMetadata
	(*NamespaceAndRevision)(nil),       // 9: impl.v1.NamespaceAndRevision
	(*V1Alpha1Revision)(nil),           // 10: impl.v1.V1Alpha1Revision
	(*DecodedZookie_V1Zookie)(nil),     // 11: impl.v1.DecodedZookie.V1Zookie
	(*DecodedZookie_V2Zookie)(nil),     // 12: impl.v1.DecodedZookie.V2Zookie
	(*DecodedZedToken_V1Zookie)(nil),   // 13: impl.v1.DecodedZedToken.V1Zookie
	(*DecodedZedToken_V1ZedToken)(nil), // 14: impl.v1.DecodedZedToken.V1ZedToken
	nil,                                // 15: impl.v1.V1Cursor.FlagsEntry
	(*v1alpha1.CheckedExpr)(nil),       // 16: google.api.expr.v1alpha1.CheckedExpr
}
var file_impl_v1_impl_proto_depIdxs = []int32{
	16, // 0: impl.v1.DecodedCaveat.cel:type_name -> google.api.expr.v1alpha1.CheckedExpr
	11, // 1: impl.v1.DecodedZookie.v1:type_name -> impl.v1.DecodedZookie.V1Zookie
	12, // 2: impl.v1.DecodedZookie.v2:type_name -> impl.v1.DecodedZookie.V2Zookie
	13, // 3: impl.v1.DecodedZedToken.deprecated_v1_zookie:type_name -> impl.v1.DecodedZedToken.V1Zookie
	14, // 4: impl.v1.DecodedZedToken.v1:type_name -> impl.v1.DecodedZedToken.V1ZedToken
	5,  // 5: impl.v1.DecodedCursor.v1:type_name -> impl.v1.V1Cursor
	15, // 6: impl.v1.V1Cursor.flags:type_name -> impl.v1.V1Cursor.FlagsEntry
	0,  // 7: impl.v1.RelationMetadata.kind:type_name -> impl.v1.RelationMetadata.RelationKind
	7,  // 8: impl.v1.RelationMetadata.type_annotations:type_name -> impl.v1.TypeAnnotations
	9,  // 9: impl.v1.V1Alpha1Revision.ns_revisions:type_name -> impl.v1.NamespaceAndRevision
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_impl_v1_impl_proto_init() }
func file_impl_v1_impl_proto_init() {
	if File_impl_v1_impl_proto != nil {
		return
	}
	file_impl_v1_impl_proto_msgTypes[0].OneofWrappers = []any{
		(*DecodedCaveat_Cel)(nil),
	}
	file_impl_v1_impl_proto_msgTypes[1].OneofWrappers = []any{
		(*DecodedZookie_V1)(nil),
		(*DecodedZookie_V2)(nil),
	}
	file_impl_v1_impl_proto_msgTypes[2].OneofWrappers = []any{
		(*DecodedZedToken_DeprecatedV1Zookie)(nil),
		(*DecodedZedToken_V1)(nil),
	}
	file_impl_v1_impl_proto_msgTypes[3].OneofWrappers = []any{
		(*DecodedCursor_V1)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_impl_v1_impl_proto_rawDesc), len(file_impl_v1_impl_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_impl_v1_impl_proto_goTypes,
		DependencyIndexes: file_impl_v1_impl_proto_depIdxs,
		EnumInfos:         file_impl_v1_impl_proto_enumTypes,
		MessageInfos:      file_impl_v1_impl_proto_msgTypes,
	}.Build()
	File_impl_v1_impl_proto = out.File
	file_impl_v1_impl_proto_goTypes = nil
	file_impl_v1_impl_proto_depIdxs = nil
}
