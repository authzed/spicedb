// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: impl/v1/pgrevision.proto

package implv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// PostgresRevision is a compact binary encoding of a postgres snapshot as
// described in the offial documentation here:
// https://www.postgresql.org/docs/current/functions-info.html#FUNCTIONS-PG-SNAPSHOT-PARTS
//
// We use relative offsets for xmax and the xips to reduce the number of bytes
// required for binary encoding using the protobuf varint datatype:
// https://protobuf.dev/programming-guides/encoding/#varints
type PostgresRevision struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Xmin         uint64                 `protobuf:"varint,1,opt,name=xmin,proto3" json:"xmin,omitempty"`
	RelativeXmax int64                  `protobuf:"varint,2,opt,name=relative_xmax,json=relativeXmax,proto3" json:"relative_xmax,omitempty"`
	RelativeXips []int64                `protobuf:"varint,3,rep,packed,name=relative_xips,json=relativeXips,proto3" json:"relative_xips,omitempty"`
	// these are optional fields that are only present in strategic places that
	// need the information, but otherwise is omitted to reduce the overhead
	// of loading it from the DB and keeping it around in memory
	OptionalTxid      uint64 `protobuf:"varint,4,opt,name=optional_txid,json=optionalTxid,proto3" json:"optional_txid,omitempty"`
	OptionalTimestamp uint64 `protobuf:"varint,5,opt,name=optional_timestamp,json=optionalTimestamp,proto3" json:"optional_timestamp,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *PostgresRevision) Reset() {
	*x = PostgresRevision{}
	mi := &file_impl_v1_pgrevision_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostgresRevision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostgresRevision) ProtoMessage() {}

func (x *PostgresRevision) ProtoReflect() protoreflect.Message {
	mi := &file_impl_v1_pgrevision_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostgresRevision.ProtoReflect.Descriptor instead.
func (*PostgresRevision) Descriptor() ([]byte, []int) {
	return file_impl_v1_pgrevision_proto_rawDescGZIP(), []int{0}
}

func (x *PostgresRevision) GetXmin() uint64 {
	if x != nil {
		return x.Xmin
	}
	return 0
}

func (x *PostgresRevision) GetRelativeXmax() int64 {
	if x != nil {
		return x.RelativeXmax
	}
	return 0
}

func (x *PostgresRevision) GetRelativeXips() []int64 {
	if x != nil {
		return x.RelativeXips
	}
	return nil
}

func (x *PostgresRevision) GetOptionalTxid() uint64 {
	if x != nil {
		return x.OptionalTxid
	}
	return 0
}

func (x *PostgresRevision) GetOptionalTimestamp() uint64 {
	if x != nil {
		return x.OptionalTimestamp
	}
	return 0
}

var File_impl_v1_pgrevision_proto protoreflect.FileDescriptor

const file_impl_v1_pgrevision_proto_rawDesc = "" +
	"\n" +
	"\x18impl/v1/pgrevision.proto\x12\aimpl.v1\"\xc4\x01\n" +
	"\x10PostgresRevision\x12\x12\n" +
	"\x04xmin\x18\x01 \x01(\x04R\x04xmin\x12#\n" +
	"\rrelative_xmax\x18\x02 \x01(\x03R\frelativeXmax\x12#\n" +
	"\rrelative_xips\x18\x03 \x03(\x03R\frelativeXips\x12#\n" +
	"\roptional_txid\x18\x04 \x01(\x04R\foptionalTxid\x12-\n" +
	"\x12optional_timestamp\x18\x05 \x01(\x04R\x11optionalTimestampB\x90\x01\n" +
	"\vcom.impl.v1B\x0fPgrevisionProtoP\x01Z3github.com/authzed/spicedb/pkg/proto/impl/v1;implv1\xa2\x02\x03IXX\xaa\x02\aImpl.V1\xca\x02\aImpl\\V1\xe2\x02\x13Impl\\V1\\GPBMetadata\xea\x02\bImpl::V1b\x06proto3"

var (
	file_impl_v1_pgrevision_proto_rawDescOnce sync.Once
	file_impl_v1_pgrevision_proto_rawDescData []byte
)

func file_impl_v1_pgrevision_proto_rawDescGZIP() []byte {
	file_impl_v1_pgrevision_proto_rawDescOnce.Do(func() {
		file_impl_v1_pgrevision_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_impl_v1_pgrevision_proto_rawDesc), len(file_impl_v1_pgrevision_proto_rawDesc)))
	})
	return file_impl_v1_pgrevision_proto_rawDescData
}

var file_impl_v1_pgrevision_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_impl_v1_pgrevision_proto_goTypes = []any{
	(*PostgresRevision)(nil), // 0: impl.v1.PostgresRevision
}
var file_impl_v1_pgrevision_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_impl_v1_pgrevision_proto_init() }
func file_impl_v1_pgrevision_proto_init() {
	if File_impl_v1_pgrevision_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_impl_v1_pgrevision_proto_rawDesc), len(file_impl_v1_pgrevision_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_impl_v1_pgrevision_proto_goTypes,
		DependencyIndexes: file_impl_v1_pgrevision_proto_depIdxs,
		MessageInfos:      file_impl_v1_pgrevision_proto_msgTypes,
	}.Build()
	File_impl_v1_pgrevision_proto = out.File
	file_impl_v1_pgrevision_proto_goTypes = nil
	file_impl_v1_pgrevision_proto_depIdxs = nil
}
