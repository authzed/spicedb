// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: authzed/api/v0/acl_service.proto

package v0

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RelationTupleFilter_Filter int32

const (
	RelationTupleFilter_UNKNOWN   RelationTupleFilter_Filter = 0
	RelationTupleFilter_OBJECT_ID RelationTupleFilter_Filter = 1
	RelationTupleFilter_RELATION  RelationTupleFilter_Filter = 2
	RelationTupleFilter_USERSET   RelationTupleFilter_Filter = 4
)

// Enum value maps for RelationTupleFilter_Filter.
var (
	RelationTupleFilter_Filter_name = map[int32]string{
		0: "UNKNOWN",
		1: "OBJECT_ID",
		2: "RELATION",
		4: "USERSET",
	}
	RelationTupleFilter_Filter_value = map[string]int32{
		"UNKNOWN":   0,
		"OBJECT_ID": 1,
		"RELATION":  2,
		"USERSET":   4,
	}
)

func (x RelationTupleFilter_Filter) Enum() *RelationTupleFilter_Filter {
	p := new(RelationTupleFilter_Filter)
	*p = x
	return p
}

func (x RelationTupleFilter_Filter) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RelationTupleFilter_Filter) Descriptor() protoreflect.EnumDescriptor {
	return file_authzed_api_v0_acl_service_proto_enumTypes[0].Descriptor()
}

func (RelationTupleFilter_Filter) Type() protoreflect.EnumType {
	return &file_authzed_api_v0_acl_service_proto_enumTypes[0]
}

func (x RelationTupleFilter_Filter) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RelationTupleFilter_Filter.Descriptor instead.
func (RelationTupleFilter_Filter) EnumDescriptor() ([]byte, []int) {
	return file_authzed_api_v0_acl_service_proto_rawDescGZIP(), []int{0, 0}
}

type CheckResponse_Membership int32

const (
	CheckResponse_UNKNOWN    CheckResponse_Membership = 0
	CheckResponse_NOT_MEMBER CheckResponse_Membership = 1
	CheckResponse_MEMBER     CheckResponse_Membership = 2
)

// Enum value maps for CheckResponse_Membership.
var (
	CheckResponse_Membership_name = map[int32]string{
		0: "UNKNOWN",
		1: "NOT_MEMBER",
		2: "MEMBER",
	}
	CheckResponse_Membership_value = map[string]int32{
		"UNKNOWN":    0,
		"NOT_MEMBER": 1,
		"MEMBER":     2,
	}
)

func (x CheckResponse_Membership) Enum() *CheckResponse_Membership {
	p := new(CheckResponse_Membership)
	*p = x
	return p
}

func (x CheckResponse_Membership) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckResponse_Membership) Descriptor() protoreflect.EnumDescriptor {
	return file_authzed_api_v0_acl_service_proto_enumTypes[1].Descriptor()
}

func (CheckResponse_Membership) Type() protoreflect.EnumType {
	return &file_authzed_api_v0_acl_service_proto_enumTypes[1]
}

func (x CheckResponse_Membership) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckResponse_Membership.Descriptor instead.
func (CheckResponse_Membership) EnumDescriptor() ([]byte, []int) {
	return file_authzed_api_v0_acl_service_proto_rawDescGZIP(), []int{7, 0}
}

type RelationTupleFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Setting any of these fields requires the appropriate filter type to be
	// added to the filters list as well
	ObjectId string                       `protobuf:"bytes,2,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Relation string                       `protobuf:"bytes,3,opt,name=relation,proto3" json:"relation,omitempty"`
	Userset  *ObjectAndRelation           `protobuf:"bytes,5,opt,name=userset,proto3" json:"userset,omitempty"`
	Filters  []RelationTupleFilter_Filter `protobuf:"varint,6,rep,packed,name=filters,proto3,enum=authzed.api.v0.RelationTupleFilter_Filter" json:"filters,omitempty"`
}

func (x *RelationTupleFilter) Reset() {
	*x = RelationTupleFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authzed_api_v0_acl_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationTupleFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationTupleFilter) ProtoMessage() {}

func (x *RelationTupleFilter) ProtoReflect() protoreflect.Message {
	mi := &file_authzed_api_v0_acl_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationTupleFilter.ProtoReflect.Descriptor instead.
func (*RelationTupleFilter) Descriptor() ([]byte, []int) {
	return file_authzed_api_v0_acl_service_proto_rawDescGZIP(), []int{0}
}

func (x *RelationTupleFilter) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RelationTupleFilter) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *RelationTupleFilter) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

func (x *RelationTupleFilter) GetUserset() *ObjectAndRelation {
	if x != nil {
		return x.Userset
	}
	return nil
}

func (x *RelationTupleFilter) GetFilters() []RelationTupleFilter_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type ReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A read request specifies one or multiple tuplesets and an optional zookie.
	Tuplesets  []*RelationTupleFilter `protobuf:"bytes,1,rep,name=tuplesets,proto3" json:"tuplesets,omitempty"`
	AtRevision *Zookie                `protobuf:"bytes,2,opt,name=at_revision,json=atRevision,proto3" json:"at_revision,omitempty"`
}

func (x *ReadRequest) Reset() {
	*x = ReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authzed_api_v0_acl_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequest) ProtoMessage() {}

func (x *ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authzed_api_v0_acl_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRequest.ProtoReflect.Descriptor instead.
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return file_authzed_api_v0_acl_service_proto_rawDescGZIP(), []int{1}
}

func (x *ReadRequest) GetTuplesets() []*RelationTupleFilter {
	if x != nil {
		return x.Tuplesets
	}
	return nil
}

func (x *ReadRequest) GetAtRevision() *Zookie {
	if x != nil {
		return x.AtRevision
	}
	return nil
}

type ReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tuplesets []*ReadResponse_Tupleset `protobuf:"bytes,1,rep,name=tuplesets,proto3" json:"tuplesets,omitempty"`
	Revision  *Zookie                  `protobuf:"bytes,2,opt,name=revision,proto3" json:"revision,omitempty"`
}

func (x *ReadResponse) Reset() {
	*x = ReadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authzed_api_v0_acl_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResponse) ProtoMessage() {}

func (x *ReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authzed_api_v0_acl_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResponse.ProtoReflect.Descriptor instead.
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return file_authzed_api_v0_acl_service_proto_rawDescGZIP(), []int{2}
}

func (x *ReadResponse) GetTuplesets() []*ReadResponse_Tupleset {
	if x != nil {
		return x.Tuplesets
	}
	return nil
}

func (x *ReadResponse) GetRevision() *Zookie {
	if x != nil {
		return x.Revision
	}
	return nil
}

type WriteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Clients may modify a single relation tuple to add or remove an ACL. They
	// may also modify all tuples related to an object via a read-modify-write
	// process with optimistic concurrency control [21] that uses a read RPC
	// followed by a write RPC:
	//
	// 1. Read all relation tuples of an object, including a per-object “lock”
	//    tuple.
	// 2. Generate the tuples to write or delete. Send the writes, along with a
	//    touch on the lock tuple, to Zanzibar, with the condition that the
	//    writes will be committed only if the lock tuple has not been modified
	//    since the read.
	// 3. If the write condition is not met, go back to step 1.
	//    The lock tuple is just a regular relation tuple used by clients to
	//    detect write races.
	//
	// The lock tuple is just a regular relation tuple used by clients to
	// detect write races.
	WriteConditions []*RelationTuple       `protobuf:"bytes,1,rep,name=write_conditions,json=writeConditions,proto3" json:"write_conditions,omitempty"` // To be bounded by configuration
	Updates         []*RelationTupleUpdate `protobuf:"bytes,2,rep,name=updates,proto3" json:"updates,omitempty"`
}

func (x *WriteRequest) Reset() {
	*x = WriteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authzed_api_v0_acl_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRequest) ProtoMessage() {}

func (x *WriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authzed_api_v0_acl_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteRequest.ProtoReflect.Descriptor instead.
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return file_authzed_api_v0_acl_service_proto_rawDescGZIP(), []int{3}
}

func (x *WriteRequest) GetWriteConditions() []*RelationTuple {
	if x != nil {
		return x.WriteConditions
	}
	return nil
}

func (x *WriteRequest) GetUpdates() []*RelationTupleUpdate {
	if x != nil {
		return x.Updates
	}
	return nil
}

type WriteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Revision *Zookie `protobuf:"bytes,1,opt,name=revision,proto3" json:"revision,omitempty"`
}

func (x *WriteResponse) Reset() {
	*x = WriteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authzed_api_v0_acl_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteResponse) ProtoMessage() {}

func (x *WriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authzed_api_v0_acl_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteResponse.ProtoReflect.Descriptor instead.
func (*WriteResponse) Descriptor() ([]byte, []int) {
	return file_authzed_api_v0_acl_service_proto_rawDescGZIP(), []int{4}
}

func (x *WriteResponse) GetRevision() *Zookie {
	if x != nil {
		return x.Revision
	}
	return nil
}

type CheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A check request specifies a userset, represented by ⟨object#relation⟩,
	// a putative user, often represented by an authentication token, and a
	// zookie corresponding to the desired object version.
	TestUserset *ObjectAndRelation `protobuf:"bytes,1,opt,name=test_userset,json=testUserset,proto3" json:"test_userset,omitempty"`
	User        *User              `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"` // TODO swap for putative user
	AtRevision  *Zookie            `protobuf:"bytes,3,opt,name=at_revision,json=atRevision,proto3" json:"at_revision,omitempty"`
}

func (x *CheckRequest) Reset() {
	*x = CheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authzed_api_v0_acl_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRequest) ProtoMessage() {}

func (x *CheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authzed_api_v0_acl_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRequest.ProtoReflect.Descriptor instead.
func (*CheckRequest) Descriptor() ([]byte, []int) {
	return file_authzed_api_v0_acl_service_proto_rawDescGZIP(), []int{5}
}

func (x *CheckRequest) GetTestUserset() *ObjectAndRelation {
	if x != nil {
		return x.TestUserset
	}
	return nil
}

func (x *CheckRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *CheckRequest) GetAtRevision() *Zookie {
	if x != nil {
		return x.AtRevision
	}
	return nil
}

type ContentChangeCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// To authorize application content modifications, our clients send a special
	// type of check request, a content-change check. A content-change check
	// request does not carry a zookie and is evaluated at the latest snapshot.
	TestUserset *ObjectAndRelation `protobuf:"bytes,1,opt,name=test_userset,json=testUserset,proto3" json:"test_userset,omitempty"`
	User        *User              `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"` // TODO swap for a putative user
}

func (x *ContentChangeCheckRequest) Reset() {
	*x = ContentChangeCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authzed_api_v0_acl_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContentChangeCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentChangeCheckRequest) ProtoMessage() {}

func (x *ContentChangeCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authzed_api_v0_acl_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentChangeCheckRequest.ProtoReflect.Descriptor instead.
func (*ContentChangeCheckRequest) Descriptor() ([]byte, []int) {
	return file_authzed_api_v0_acl_service_proto_rawDescGZIP(), []int{6}
}

func (x *ContentChangeCheckRequest) GetTestUserset() *ObjectAndRelation {
	if x != nil {
		return x.TestUserset
	}
	return nil
}

func (x *ContentChangeCheckRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type CheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsMember   bool                     `protobuf:"varint,1,opt,name=is_member,json=isMember,proto3" json:"is_member,omitempty"`
	Revision   *Zookie                  `protobuf:"bytes,2,opt,name=revision,proto3" json:"revision,omitempty"`
	Membership CheckResponse_Membership `protobuf:"varint,3,opt,name=membership,proto3,enum=authzed.api.v0.CheckResponse_Membership" json:"membership,omitempty"`
}

func (x *CheckResponse) Reset() {
	*x = CheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authzed_api_v0_acl_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckResponse) ProtoMessage() {}

func (x *CheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authzed_api_v0_acl_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckResponse.ProtoReflect.Descriptor instead.
func (*CheckResponse) Descriptor() ([]byte, []int) {
	return file_authzed_api_v0_acl_service_proto_rawDescGZIP(), []int{7}
}

func (x *CheckResponse) GetIsMember() bool {
	if x != nil {
		return x.IsMember
	}
	return false
}

func (x *CheckResponse) GetRevision() *Zookie {
	if x != nil {
		return x.Revision
	}
	return nil
}

func (x *CheckResponse) GetMembership() CheckResponse_Membership {
	if x != nil {
		return x.Membership
	}
	return CheckResponse_UNKNOWN
}

type ExpandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The Expand API returns the effective userset given an ⟨object#relation⟩
	// pair and an optional zookie. Unlike the Read API, Expand follows indirect
	// references expressed through userset rewrite rules.
	Userset    *ObjectAndRelation `protobuf:"bytes,1,opt,name=userset,proto3" json:"userset,omitempty"`
	AtRevision *Zookie            `protobuf:"bytes,2,opt,name=at_revision,json=atRevision,proto3" json:"at_revision,omitempty"`
}

func (x *ExpandRequest) Reset() {
	*x = ExpandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authzed_api_v0_acl_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpandRequest) ProtoMessage() {}

func (x *ExpandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authzed_api_v0_acl_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpandRequest.ProtoReflect.Descriptor instead.
func (*ExpandRequest) Descriptor() ([]byte, []int) {
	return file_authzed_api_v0_acl_service_proto_rawDescGZIP(), []int{8}
}

func (x *ExpandRequest) GetUserset() *ObjectAndRelation {
	if x != nil {
		return x.Userset
	}
	return nil
}

func (x *ExpandRequest) GetAtRevision() *Zookie {
	if x != nil {
		return x.AtRevision
	}
	return nil
}

type ExpandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result is represented by a userset tree whose leaf nodes are user IDs
	// or usersets pointing to other ⟨object#relation⟩ pairs, and intermediate
	// nodes represent union, intersection, or exclusion operators.
	TreeNode *RelationTupleTreeNode `protobuf:"bytes,1,opt,name=tree_node,json=treeNode,proto3" json:"tree_node,omitempty"`
	Revision *Zookie                `protobuf:"bytes,3,opt,name=revision,proto3" json:"revision,omitempty"`
}

func (x *ExpandResponse) Reset() {
	*x = ExpandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authzed_api_v0_acl_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpandResponse) ProtoMessage() {}

func (x *ExpandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authzed_api_v0_acl_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpandResponse.ProtoReflect.Descriptor instead.
func (*ExpandResponse) Descriptor() ([]byte, []int) {
	return file_authzed_api_v0_acl_service_proto_rawDescGZIP(), []int{9}
}

func (x *ExpandResponse) GetTreeNode() *RelationTupleTreeNode {
	if x != nil {
		return x.TreeNode
	}
	return nil
}

func (x *ExpandResponse) GetRevision() *Zookie {
	if x != nil {
		return x.Revision
	}
	return nil
}

type LookupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectRelation *RelationReference `protobuf:"bytes,1,opt,name=object_relation,json=objectRelation,proto3" json:"object_relation,omitempty"`
	User           *ObjectAndRelation `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	AtRevision     *Zookie            `protobuf:"bytes,3,opt,name=at_revision,json=atRevision,proto3" json:"at_revision,omitempty"`
	PageReference  string             `protobuf:"bytes,4,opt,name=page_reference,json=pageReference,proto3" json:"page_reference,omitempty"`
	Limit          uint32             `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *LookupRequest) Reset() {
	*x = LookupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authzed_api_v0_acl_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupRequest) ProtoMessage() {}

func (x *LookupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authzed_api_v0_acl_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupRequest.ProtoReflect.Descriptor instead.
func (*LookupRequest) Descriptor() ([]byte, []int) {
	return file_authzed_api_v0_acl_service_proto_rawDescGZIP(), []int{10}
}

func (x *LookupRequest) GetObjectRelation() *RelationReference {
	if x != nil {
		return x.ObjectRelation
	}
	return nil
}

func (x *LookupRequest) GetUser() *ObjectAndRelation {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *LookupRequest) GetAtRevision() *Zookie {
	if x != nil {
		return x.AtRevision
	}
	return nil
}

func (x *LookupRequest) GetPageReference() string {
	if x != nil {
		return x.PageReference
	}
	return ""
}

func (x *LookupRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type LookupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResolvedObjectIds []string `protobuf:"bytes,1,rep,name=resolved_object_ids,json=resolvedObjectIds,proto3" json:"resolved_object_ids,omitempty"`
	NextPageReference string   `protobuf:"bytes,2,opt,name=next_page_reference,json=nextPageReference,proto3" json:"next_page_reference,omitempty"`
	Revision          *Zookie  `protobuf:"bytes,3,opt,name=revision,proto3" json:"revision,omitempty"`
}

func (x *LookupResponse) Reset() {
	*x = LookupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authzed_api_v0_acl_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupResponse) ProtoMessage() {}

func (x *LookupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authzed_api_v0_acl_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupResponse.ProtoReflect.Descriptor instead.
func (*LookupResponse) Descriptor() ([]byte, []int) {
	return file_authzed_api_v0_acl_service_proto_rawDescGZIP(), []int{11}
}

func (x *LookupResponse) GetResolvedObjectIds() []string {
	if x != nil {
		return x.ResolvedObjectIds
	}
	return nil
}

func (x *LookupResponse) GetNextPageReference() string {
	if x != nil {
		return x.NextPageReference
	}
	return ""
}

func (x *LookupResponse) GetRevision() *Zookie {
	if x != nil {
		return x.Revision
	}
	return nil
}

type ReadResponse_Tupleset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tuples []*RelationTuple `protobuf:"bytes,1,rep,name=tuples,proto3" json:"tuples,omitempty"`
}

func (x *ReadResponse_Tupleset) Reset() {
	*x = ReadResponse_Tupleset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authzed_api_v0_acl_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadResponse_Tupleset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResponse_Tupleset) ProtoMessage() {}

func (x *ReadResponse_Tupleset) ProtoReflect() protoreflect.Message {
	mi := &file_authzed_api_v0_acl_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResponse_Tupleset.ProtoReflect.Descriptor instead.
func (*ReadResponse_Tupleset) Descriptor() ([]byte, []int) {
	return file_authzed_api_v0_acl_service_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ReadResponse_Tupleset) GetTuples() []*RelationTuple {
	if x != nil {
		return x.Tuples
	}
	return nil
}

var File_authzed_api_v0_acl_service_proto protoreflect.FileDescriptor

var file_authzed_api_v0_acl_service_proto_rawDesc = []byte{
	0x0a, 0x20, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30,
	0x2f, 0x61, 0x63, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x30, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x61, 0x75, 0x74,
	0x68, 0x7a, 0x65, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe7, 0x03, 0x0a, 0x13, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x66,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x48, 0xfa, 0x42, 0x45, 0x72, 0x43, 0x28, 0x80, 0x01, 0x32, 0x3e, 0x5e, 0x28, 0x5b,
	0x61, 0x2d, 0x7a, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5f, 0x5d, 0x7b, 0x31, 0x2c,
	0x36, 0x31, 0x7d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x2f, 0x29, 0x3f, 0x5b, 0x61,
	0x2d, 0x7a, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5f, 0x5d, 0x7b, 0x31, 0x2c, 0x36,
	0x32, 0x7d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x24, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0xfa, 0x42, 0x2d, 0x72, 0x2b,
	0x28, 0x80, 0x01, 0x32, 0x26, 0x5e, 0x28, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x30, 0x2d,
	0x39, 0x5f, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39, 0x2f, 0x5f, 0x2d,
	0x5d, 0x7b, 0x30, 0x2c, 0x31, 0x32, 0x37, 0x7d, 0x29, 0x3f, 0x24, 0x52, 0x08, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2a, 0xfa, 0x42, 0x27, 0x72, 0x25, 0x28, 0x40,
	0x32, 0x21, 0x5e, 0x28, 0x5b, 0x61, 0x2d, 0x7a, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39,
	0x5f, 0x5d, 0x7b, 0x31, 0x2c, 0x36, 0x32, 0x7d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d,
	0x29, 0x3f, 0x24, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x74, 0x12, 0x53, 0x0a, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x92, 0x01, 0x07, 0x22,
	0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22,
	0x3f, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54,
	0x5f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x53, 0x45, 0x52, 0x53, 0x45, 0x54, 0x10, 0x04,
	0x22, 0x9a, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x52, 0x0a, 0x09, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x30, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x75, 0x70,
	0x6c, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x0f, 0xfa, 0x42, 0x0c, 0x92, 0x01, 0x09,
	0x08, 0x01, 0x22, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x09, 0x74, 0x75, 0x70, 0x6c, 0x65,
	0x73, 0x65, 0x74, 0x73, 0x12, 0x37, 0x0a, 0x0b, 0x61, 0x74, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x5a, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x52, 0x0a, 0x61, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xca, 0x01,
	0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43,
	0x0a, 0x09, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x30, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x54, 0x75, 0x70, 0x6c, 0x65, 0x73, 0x65, 0x74, 0x52, 0x09, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x73,
	0x65, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x5a, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x52, 0x08, 0x72,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x41, 0x0a, 0x08, 0x54, 0x75, 0x70, 0x6c, 0x65,
	0x73, 0x65, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x30, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x75, 0x70,
	0x6c, 0x65, 0x52, 0x06, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x0c, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x10, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x75, 0x70, 0x6c, 0x65, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x92, 0x01, 0x07, 0x22, 0x05, 0x8a, 0x01,
	0x02, 0x10, 0x01, 0x52, 0x0f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4c, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x75, 0x70, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x92,
	0x01, 0x07, 0x22, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x22, 0x43, 0x0a, 0x0d, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x5a, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x52, 0x08, 0x72,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xcb, 0x01, 0x0a, 0x0c, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x0c, 0x74, 0x65, 0x73, 0x74,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x74, 0x65, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x0b,
	0x61, 0x74, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x30, 0x2e, 0x5a, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x52, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x9f, 0x01, 0x0a, 0x19, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x0c, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x74, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x30, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0xe1, 0x01, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a,
	0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x5a, 0x6f, 0x6f, 0x6b, 0x69, 0x65,
	0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x0a, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x22, 0x35, 0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x4e, 0x4f, 0x54, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x02, 0x22, 0x8f, 0x01, 0x0a, 0x0d,
	0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x65, 0x74, 0x12, 0x37, 0x0a, 0x0b, 0x61, 0x74, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x5a, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x52, 0x0a, 0x61, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x88, 0x01,
	0x0a, 0x0e, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x42, 0x0a, 0x09, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x30, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x75, 0x70,
	0x6c, 0x65, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x74, 0x72, 0x65, 0x65,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x5a, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x52, 0x08,
	0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x9c, 0x02, 0x0a, 0x0d, 0x4c, 0x6f, 0x6f,
	0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x0f, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x30, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01,
	0x52, 0x0e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x37, 0x0a, 0x0b, 0x61, 0x74, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x5a, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x52, 0x0a,
	0x61, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x0e, 0x4c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65,
	0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65,
	0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x72, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x5a, 0x6f,
	0x6f, 0x6b, 0x69, 0x65, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0xd9,
	0x03, 0x0a, 0x0a, 0x41, 0x43, 0x4c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a,
	0x04, 0x52, 0x65, 0x61, 0x64, 0x12, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x30, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x46, 0x0a, 0x05, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x05, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x12, 0x1c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x30, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x60, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x29, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a,
	0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x12, 0x1d,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e,
	0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x45,
	0x78, 0x70, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x49, 0x0a, 0x06, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x12, 0x1d, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a,
	0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x48, 0x0a, 0x12, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30,
	0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x75, 0x74,
	0x68, 0x7a, 0x65, 0x64, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2d, 0x67, 0x6f, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x30, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_authzed_api_v0_acl_service_proto_rawDescOnce sync.Once
	file_authzed_api_v0_acl_service_proto_rawDescData = file_authzed_api_v0_acl_service_proto_rawDesc
)

func file_authzed_api_v0_acl_service_proto_rawDescGZIP() []byte {
	file_authzed_api_v0_acl_service_proto_rawDescOnce.Do(func() {
		file_authzed_api_v0_acl_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_authzed_api_v0_acl_service_proto_rawDescData)
	})
	return file_authzed_api_v0_acl_service_proto_rawDescData
}

var file_authzed_api_v0_acl_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_authzed_api_v0_acl_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_authzed_api_v0_acl_service_proto_goTypes = []interface{}{
	(RelationTupleFilter_Filter)(0),   // 0: authzed.api.v0.RelationTupleFilter.Filter
	(CheckResponse_Membership)(0),     // 1: authzed.api.v0.CheckResponse.Membership
	(*RelationTupleFilter)(nil),       // 2: authzed.api.v0.RelationTupleFilter
	(*ReadRequest)(nil),               // 3: authzed.api.v0.ReadRequest
	(*ReadResponse)(nil),              // 4: authzed.api.v0.ReadResponse
	(*WriteRequest)(nil),              // 5: authzed.api.v0.WriteRequest
	(*WriteResponse)(nil),             // 6: authzed.api.v0.WriteResponse
	(*CheckRequest)(nil),              // 7: authzed.api.v0.CheckRequest
	(*ContentChangeCheckRequest)(nil), // 8: authzed.api.v0.ContentChangeCheckRequest
	(*CheckResponse)(nil),             // 9: authzed.api.v0.CheckResponse
	(*ExpandRequest)(nil),             // 10: authzed.api.v0.ExpandRequest
	(*ExpandResponse)(nil),            // 11: authzed.api.v0.ExpandResponse
	(*LookupRequest)(nil),             // 12: authzed.api.v0.LookupRequest
	(*LookupResponse)(nil),            // 13: authzed.api.v0.LookupResponse
	(*ReadResponse_Tupleset)(nil),     // 14: authzed.api.v0.ReadResponse.Tupleset
	(*ObjectAndRelation)(nil),         // 15: authzed.api.v0.ObjectAndRelation
	(*Zookie)(nil),                    // 16: authzed.api.v0.Zookie
	(*RelationTuple)(nil),             // 17: authzed.api.v0.RelationTuple
	(*RelationTupleUpdate)(nil),       // 18: authzed.api.v0.RelationTupleUpdate
	(*User)(nil),                      // 19: authzed.api.v0.User
	(*RelationTupleTreeNode)(nil),     // 20: authzed.api.v0.RelationTupleTreeNode
	(*RelationReference)(nil),         // 21: authzed.api.v0.RelationReference
}
var file_authzed_api_v0_acl_service_proto_depIdxs = []int32{
	15, // 0: authzed.api.v0.RelationTupleFilter.userset:type_name -> authzed.api.v0.ObjectAndRelation
	0,  // 1: authzed.api.v0.RelationTupleFilter.filters:type_name -> authzed.api.v0.RelationTupleFilter.Filter
	2,  // 2: authzed.api.v0.ReadRequest.tuplesets:type_name -> authzed.api.v0.RelationTupleFilter
	16, // 3: authzed.api.v0.ReadRequest.at_revision:type_name -> authzed.api.v0.Zookie
	14, // 4: authzed.api.v0.ReadResponse.tuplesets:type_name -> authzed.api.v0.ReadResponse.Tupleset
	16, // 5: authzed.api.v0.ReadResponse.revision:type_name -> authzed.api.v0.Zookie
	17, // 6: authzed.api.v0.WriteRequest.write_conditions:type_name -> authzed.api.v0.RelationTuple
	18, // 7: authzed.api.v0.WriteRequest.updates:type_name -> authzed.api.v0.RelationTupleUpdate
	16, // 8: authzed.api.v0.WriteResponse.revision:type_name -> authzed.api.v0.Zookie
	15, // 9: authzed.api.v0.CheckRequest.test_userset:type_name -> authzed.api.v0.ObjectAndRelation
	19, // 10: authzed.api.v0.CheckRequest.user:type_name -> authzed.api.v0.User
	16, // 11: authzed.api.v0.CheckRequest.at_revision:type_name -> authzed.api.v0.Zookie
	15, // 12: authzed.api.v0.ContentChangeCheckRequest.test_userset:type_name -> authzed.api.v0.ObjectAndRelation
	19, // 13: authzed.api.v0.ContentChangeCheckRequest.user:type_name -> authzed.api.v0.User
	16, // 14: authzed.api.v0.CheckResponse.revision:type_name -> authzed.api.v0.Zookie
	1,  // 15: authzed.api.v0.CheckResponse.membership:type_name -> authzed.api.v0.CheckResponse.Membership
	15, // 16: authzed.api.v0.ExpandRequest.userset:type_name -> authzed.api.v0.ObjectAndRelation
	16, // 17: authzed.api.v0.ExpandRequest.at_revision:type_name -> authzed.api.v0.Zookie
	20, // 18: authzed.api.v0.ExpandResponse.tree_node:type_name -> authzed.api.v0.RelationTupleTreeNode
	16, // 19: authzed.api.v0.ExpandResponse.revision:type_name -> authzed.api.v0.Zookie
	21, // 20: authzed.api.v0.LookupRequest.object_relation:type_name -> authzed.api.v0.RelationReference
	15, // 21: authzed.api.v0.LookupRequest.user:type_name -> authzed.api.v0.ObjectAndRelation
	16, // 22: authzed.api.v0.LookupRequest.at_revision:type_name -> authzed.api.v0.Zookie
	16, // 23: authzed.api.v0.LookupResponse.revision:type_name -> authzed.api.v0.Zookie
	17, // 24: authzed.api.v0.ReadResponse.Tupleset.tuples:type_name -> authzed.api.v0.RelationTuple
	3,  // 25: authzed.api.v0.ACLService.Read:input_type -> authzed.api.v0.ReadRequest
	5,  // 26: authzed.api.v0.ACLService.Write:input_type -> authzed.api.v0.WriteRequest
	7,  // 27: authzed.api.v0.ACLService.Check:input_type -> authzed.api.v0.CheckRequest
	8,  // 28: authzed.api.v0.ACLService.ContentChangeCheck:input_type -> authzed.api.v0.ContentChangeCheckRequest
	10, // 29: authzed.api.v0.ACLService.Expand:input_type -> authzed.api.v0.ExpandRequest
	12, // 30: authzed.api.v0.ACLService.Lookup:input_type -> authzed.api.v0.LookupRequest
	4,  // 31: authzed.api.v0.ACLService.Read:output_type -> authzed.api.v0.ReadResponse
	6,  // 32: authzed.api.v0.ACLService.Write:output_type -> authzed.api.v0.WriteResponse
	9,  // 33: authzed.api.v0.ACLService.Check:output_type -> authzed.api.v0.CheckResponse
	9,  // 34: authzed.api.v0.ACLService.ContentChangeCheck:output_type -> authzed.api.v0.CheckResponse
	11, // 35: authzed.api.v0.ACLService.Expand:output_type -> authzed.api.v0.ExpandResponse
	13, // 36: authzed.api.v0.ACLService.Lookup:output_type -> authzed.api.v0.LookupResponse
	31, // [31:37] is the sub-list for method output_type
	25, // [25:31] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_authzed_api_v0_acl_service_proto_init() }
func file_authzed_api_v0_acl_service_proto_init() {
	if File_authzed_api_v0_acl_service_proto != nil {
		return
	}
	file_authzed_api_v0_core_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_authzed_api_v0_acl_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationTupleFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authzed_api_v0_acl_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authzed_api_v0_acl_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authzed_api_v0_acl_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authzed_api_v0_acl_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authzed_api_v0_acl_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authzed_api_v0_acl_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContentChangeCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authzed_api_v0_acl_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authzed_api_v0_acl_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authzed_api_v0_acl_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authzed_api_v0_acl_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authzed_api_v0_acl_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authzed_api_v0_acl_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadResponse_Tupleset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_authzed_api_v0_acl_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_authzed_api_v0_acl_service_proto_goTypes,
		DependencyIndexes: file_authzed_api_v0_acl_service_proto_depIdxs,
		EnumInfos:         file_authzed_api_v0_acl_service_proto_enumTypes,
		MessageInfos:      file_authzed_api_v0_acl_service_proto_msgTypes,
	}.Build()
	File_authzed_api_v0_acl_service_proto = out.File
	file_authzed_api_v0_acl_service_proto_rawDesc = nil
	file_authzed_api_v0_acl_service_proto_goTypes = nil
	file_authzed_api_v0_acl_service_proto_depIdxs = nil
}
