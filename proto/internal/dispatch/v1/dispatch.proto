syntax = "proto3";
package dispatch.v1;

option go_package = "github.com/authzed/spicedb/pkg/proto/dispatch/v1";

import "validate/validate.proto";
import "core/v1/core.proto";

service DispatchService {
  rpc DispatchCheck(DispatchCheckRequest) returns (DispatchCheckResponse) {}

  rpc DispatchExpand(DispatchExpandRequest) returns (DispatchExpandResponse) {}

  rpc DispatchLookup(DispatchLookupRequest) returns (DispatchLookupResponse) {}
}

message DispatchCheckRequest {
  ResolverMeta metadata = 1 [ (validate.rules).message.required = true ];

  core.v1.ObjectAndRelation object_and_relation = 2
      [ (validate.rules).message.required = true ];
  core.v1.ObjectAndRelation subject = 3
      [ (validate.rules).message.required = true ];
}

message DispatchCheckResponse {
  enum Membership {
    UNKNOWN = 0;
    NOT_MEMBER = 1;
    MEMBER = 2;
  }

  ResponseMeta metadata = 1;
  Membership membership = 2;
}

message DispatchExpandRequest {
  enum ExpansionMode {
    SHALLOW = 0;
    RECURSIVE = 1;
  }

  ResolverMeta metadata = 1 [ (validate.rules).message.required = true ];

  core.v1.ObjectAndRelation object_and_relation = 2
      [ (validate.rules).message.required = true ];
  ExpansionMode expansion_mode = 3;
}

message DispatchExpandResponse {
  ResponseMeta metadata = 1;
  core.v1.RelationTupleTreeNode tree_node = 2;
}

message DispatchLookupRequest {
  ResolverMeta metadata = 1 [ (validate.rules).message.required = true ];

  core.v1.RelationReference object_relation = 2
      [ (validate.rules).message.required = true ];
  core.v1.ObjectAndRelation subject = 3
      [ (validate.rules).message.required = true ];
  uint32 limit = 4;
  repeated core.v1.RelationReference direct_stack = 5;
  repeated core.v1.RelationReference ttu_stack = 6;
}

message DispatchLookupResponse {
  ResponseMeta metadata = 1;

  repeated core.v1.ObjectAndRelation resolved_onrs = 2;
  string next_page_reference = 3;
}

message ResolverMeta {
  string at_revision = 1 [ (validate.rules).string = {
    pattern : "^[0-9]+(\\.[0-9]+)?$",
  } ];
  uint32 depth_remaining = 2 [ (validate.rules).uint32.gt = 0 ];
}

message ResponseMeta {
  uint32 dispatch_count = 1;
  uint32 depth_required = 2;
  uint32 cached_dispatch_count = 3;

  repeated core.v1.RelationReference lookup_excluded_direct = 4;
  repeated core.v1.RelationReference lookup_excluded_ttu = 5;
}
