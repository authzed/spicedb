syntax = "proto3";
package impl.v1;

import "google/api/expr/v1alpha1/checked.proto";

option go_package = "github.com/authzed/spicedb/pkg/proto/impl/v1";

message DecodedCaveat {
  // we do kind_oneof in case we decide to have non-CEL expressions
  oneof kind_oneof {
    google.api.expr.v1alpha1.CheckedExpr cel = 1;
  }
  string name = 2;
}

message DecodedZookie {
  uint32 version = 1;
  message V1Zookie {
    uint64 revision = 1;
  }
  message V2Zookie {
    string revision = 1;
  }
  oneof version_oneof {
    V1Zookie v1 = 2;
    V2Zookie v2 = 3;
  }
}

message DecodedZedToken {
  message V1Zookie {
    uint64 revision = 1;
  }
  message V1ZedToken {
    string revision = 1;
  }
  oneof version_oneof {
    V1Zookie deprecated_v1_zookie = 2;
    V1ZedToken v1 = 3;
  }
}

message DecodedCursor {
  // we do version_oneof in case we decide to add a new version.
  oneof version_oneof {
    V1Cursor v1 = 1;
  }
}

message V1Cursor {
  // revision is the string form of the revision for the cursor.
  string revision = 1;

  // sections are the sections of the dispatching cursor.
  repeated string sections = 2;

  // call_and_parameters_hash is a hash of the call that manufactured this cursor and all its
  // parameters, including limits and zedtoken, to ensure no inputs changed when using this cursor.
  string call_and_parameters_hash = 3;

  // dispatch_version is the version of the dispatcher which created the cursor.
  uint32 dispatch_version = 4;

  // flags are flags set by the API caller.
  map<string, string> flags = 5;
}

message DocComment {
  string comment = 1;
}

message RelationMetadata {
  enum RelationKind {
    UNKNOWN_KIND = 0;
    RELATION = 1;
    PERMISSION = 2;
  }

  RelationKind kind = 1;
}

message NamespaceAndRevision {
  string namespace_name = 1;
  string revision = 2;
}

message V1Alpha1Revision {
  repeated NamespaceAndRevision ns_revisions = 1;
}
