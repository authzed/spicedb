syntax = "proto3";
package core.v1;

option go_package = "github.com/authzed/spicedb/pkg/proto/core/v1";

import "google/protobuf/any.proto";
import "validate/validate.proto";

message RelationTuple {
  // Each tupleset specifies keys of a set of relation tuples. The set can
  // include a single tuple key, or all tuples with a given object ID or
  // userset in a namespace, optionally constrained by a relation name.
  //
  // examples:
  // doc:readme#viewer@group:eng#member (fully specified)
  // doc:*#*#group:eng#member (all tuples that this userset relates to)
  // doc:12345#*#* (all tuples with a direct relationship to a document)
  // doc:12345#writer#* (all tuples with direct write relationship with the
  // document) doc:#writer#group:eng#member (all tuples that eng group has write
  // relationship)
  ObjectAndRelation object_and_relation = 1
  [ (validate.rules).message.required = true ];
  User user = 2 [ (validate.rules).message.required = true ];
}

message ObjectAndRelation {
  string namespace = 1 [ (validate.rules).string = {
    pattern : "^([a-z][a-z0-9_]{1,61}[a-z0-9]/)?[a-z][a-z0-9_]{1,62}[a-z0-9]$",
    max_bytes : 128,
  } ];
  string object_id = 2 [ (validate.rules).string = {
    pattern : "^(([a-zA-Z0-9_][a-zA-Z0-9/_|-]{0,127})|\\*)$",
    max_bytes : 128,
  } ];
  string relation = 3 [ (validate.rules).string = {
    pattern : "^(\\.\\.\\.|[a-z][a-z0-9_]{1,62}[a-z0-9])$",
    max_bytes : 64,
  } ];
}

message RelationReference {
  string namespace = 1 [ (validate.rules).string = {
    pattern : "^([a-z][a-z0-9_]{1,61}[a-z0-9]/)?[a-z][a-z0-9_]{1,62}[a-z0-9]$",
    max_bytes : 128,
  } ];
  string relation = 3 [ (validate.rules).string = {
    pattern : "^(\\.\\.\\.|[a-z][a-z0-9_]{1,62}[a-z0-9])$",
    max_bytes : 64,
  } ];
}

message User {
  oneof user_oneof {
    option (validate.required) = true;

    ObjectAndRelation userset = 2 [ (validate.rules).message.required = true ];
  }
}

message Zookie {
  string token = 1 [ (validate.rules).string = {
    min_bytes : 1,
  } ];
}

message RelationTupleUpdate {
  enum Operation {
    UNKNOWN = 0;
    CREATE = 1;
    TOUCH = 2;
    DELETE = 3;
  }
  Operation operation = 1 [ (validate.rules).enum.defined_only = true ];
  RelationTuple tuple = 2 [ (validate.rules).message.required = true ];
}

message RelationTupleTreeNode {
  oneof node_type {
    SetOperationUserset intermediate_node = 1;
    DirectUserset leaf_node = 2;
  }
  ObjectAndRelation expanded = 3;
}

message SetOperationUserset {
  enum Operation {
    INVALID = 0;
    UNION = 1;
    INTERSECTION = 2;
    EXCLUSION = 3;
  }

  Operation operation = 1;
  repeated RelationTupleTreeNode child_nodes = 2;
}

message DirectUserset { repeated User users = 1; }

message Metadata {
  repeated google.protobuf.Any metadata_message = 1 [
    (validate.rules).repeated .min_items = 1,
    (validate.rules).repeated .items.message.required = true,

    // NOTE: This is generating code without the associated map, which we added in manually
    // until it is fixed upstream.
    // See: https://github.com/envoyproxy/protoc-gen-validate/issues/481
    (validate.rules).repeated .items.any = {
      in: [
        "type.googleapis.com/impl.v1.DocComment",
        "type.googleapis.com/impl.v1.RelationMetadata"
      ],
      required: true,
    }
  ];
}

message NamespaceDefinition {
  string name = 1 [ (validate.rules).string = {
    pattern : "^([a-z][a-z0-9_]{1,62}[a-z0-9]/)?[a-z][a-z0-9_]{1,62}[a-z0-9]$",
    max_bytes : 128,
  } ];

  repeated Relation relation = 2;
  Metadata metadata = 3;
  SourcePosition source_position = 4;
}

message Relation {
  string name = 1 [ (validate.rules).string = {
    pattern : "^[a-z][a-z0-9_]{1,62}[a-z0-9]$",
    max_bytes : 64,
  } ];
  UsersetRewrite userset_rewrite = 2;
  TypeInformation type_information = 3;
  Metadata metadata = 4;
  SourcePosition source_position = 5;
}

message TypeInformation {
  repeated AllowedRelation allowed_direct_relations = 1;
}

message AllowedRelation {
  message PublicWildcard {}

  string namespace = 1 [ (validate.rules).string = {
    pattern : "^([a-z][a-z0-9_]{1,61}[a-z0-9]/)?[a-z][a-z0-9_]{1,62}[a-z0-9]$",
    max_bytes : 128,
  } ];
  oneof relation_or_wildcard {
    string relation = 3 [ (validate.rules).string = {
      pattern : "^(\\.\\.\\.|[a-z][a-z0-9_]{1,62}[a-z0-9])$",
      max_bytes : 64,
    } ];
    PublicWildcard public_wildcard = 4;
  }
  SourcePosition source_position = 5;
}

message UsersetRewrite {
  oneof rewrite_operation {
    option (validate.required) = true;

    SetOperation union = 1 [ (validate.rules).message.required = true ];
    SetOperation intersection = 2 [ (validate.rules).message.required = true ];
    SetOperation exclusion = 3 [ (validate.rules).message.required = true ];
  }

  SourcePosition source_position = 4;
}

message SetOperation {
  message Child {
    message This {}
    message Nil {}

    oneof child_type {
      option (validate.required) = true;

      This _this = 1;
      ComputedUserset computed_userset = 2
      [ (validate.rules).message.required = true ];
      TupleToUserset tuple_to_userset = 3
      [ (validate.rules).message.required = true ];
      UsersetRewrite userset_rewrite = 4
      [ (validate.rules).message.required = true ];
      Nil _nil = 6;
    }

    SourcePosition source_position = 5;
  }

  repeated Child child = 1 [
    (validate.rules).repeated .min_items = 1,
    (validate.rules).repeated .items.message.required = true
  ];
}

message TupleToUserset {
  message Tupleset {
    string relation = 1 [ (validate.rules).string = {
      pattern : "^[a-z][a-z0-9_]{1,62}[a-z0-9]$",
      max_bytes : 64,
    } ];
  }

  Tupleset tupleset = 1 [ (validate.rules).message.required = true ];
  ComputedUserset computed_userset = 2
  [ (validate.rules).message.required = true ];
  SourcePosition source_position = 3;
}

message ComputedUserset {
  enum Object {
    TUPLE_OBJECT = 0;
    TUPLE_USERSET_OBJECT = 1;
  }

  Object object = 1 [ (validate.rules).enum.defined_only = true ];
  string relation = 2 [ (validate.rules).string = {
    pattern : "^[a-z][a-z0-9_]{1,62}[a-z0-9]$",
    max_bytes : 64,
  } ];
  SourcePosition source_position = 3;
}

message SourcePosition {
  uint64 zero_indexed_line_number = 1;
  uint64 zero_indexed_column_position = 2;
}
