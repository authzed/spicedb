---
name: "Build & Test"
on:
  push:
    branches:
      - "main"
    paths:
      - ".github/workflows/build.yaml"
      - "buf.gen.yaml"
      - "buf.work.yaml"
      - "Dockerfile"
      - "go.mod"
      - "go.sum"
      - "cmd/**"
      - "pkg/**"
      - "e2e/**"
      - "internal/**"
      - "proto/**"
  pull_request:
    branches:
      - "*"
    paths:
      - ".github/workflows/build.yaml"
      - "buf.gen.yaml"
      - "buf.work.yaml"
      - "Dockerfile"
      - "go.mod"
      - "go.sum"
      - "cmd/**"
      - "pkg/**"
      - "e2e/**"
      - "internal/**"
      - "proto/**"
jobs:
  build:
    name: "Build"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-go@v2"
        with:
          go-version: "^1.17"
      - name: "Build"
        run: "go build ./cmd/..."

  unit:
    name: "Unit"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-go@v2"
        with:
          go-version: "^1.17"
      - name: "Test"
        run: "go test -race ./..."

  integration:
    name: "Integration"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-go@v2"
        with:
          go-version: "^1.17"
      - name: "Full Datastore Integration Tests"
        run: "go test -tags ci ./..."

  e2e:
    name: "E2E"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-go@v2"
        with:
          go-version: "^1.16"
      - name: "Cache Binaries"
        id: "cache-binaries"
        uses: "actions/cache@v2"
        with:
          path: |
            e2e/newenemy/cockroach
            e2e/newenemy/chaosd
            e2e/newenemy/watchmaker
          # this key will need to be bumped when dependencies are changed
          key: "cockroach-v21.1.7-chaosd-v1.0.2-2"
      - name: "Install cockroachdb and chaosd"
        if: "steps.cache-binaries.outputs.cache-hit != 'true'"
        working-directory: "e2e/newenemy"
        run: |
          curl https://binaries.cockroachdb.com/cockroach-v21.1.7.linux-amd64.tgz | tar -xz && mv cockroach-v21.1.7.linux-amd64/cockroach ./cockroach
          curl -fsSL https://mirrors.chaos-mesh.org/chaosd-v1.0.2-linux-amd64.tar.gz | tar -xz && mv chaosd-v1.0.2-linux-amd64/chaosd ./chaosd

          # chaosd doesn't yet include time modification, install it separately
          git clone https://github.com/chaos-mesh/chaos-mesh/
          pushd chaos-mesh
          git reset --hard 72d2bc17febc7f2a4a10c97417f11c5eb1d86a13
          CGO_ENABLED=1 go build ./cmd/watchmaker/
          popd
          mv ./chaos-mesh/watchmaker ./watchmaker
      - uses: "actions/cache@v2"
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: "${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}"
          restore-keys: |
            ${{ runner.os }}-go-
      - name: "Build SpiceDB"
        run: |
          go get -d ./...
          go build -o ./e2e/newenemy/spicedb ./cmd/spicedb/...
      - name: "Run e2e"
        working-directory: "e2e/newenemy"
        run: |
          go test -v -timeout 30m ./...
      - uses: "actions/upload-artifact@v2"
        if: "always()"
        # this upload step is really flaky, don't fail the job if it fails
        continue-on-error: true
        with:
          name: "node-logs"
          path: "e2e/newenemy/*.log"

  protobuf:
    name: "Generate Protobufs"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-go@v2"
        with:
          go-version: "^1.17"
      - name: "Install Go Protobuf plugins"
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.26
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.1
          go install github.com/envoyproxy/protoc-gen-validate@v0.6.1
      - uses: "bufbuild/buf-setup-action@v0.6.0"
        with:
          version: "1.0.0-rc8"
      - name: "Generate & Diff Protos"
        run: "./buf.gen.yaml && git diff && bash -c '[ $(git status --porcelain | tee /dev/fd/2 | wc -c) -eq 0 ]'"
      - uses: "bufbuild/buf-breaking-action@v0.4.0"
        if: "github.event_name == 'pull_request'"
        env:
          BUF_INPUT_HTTPS_USERNAME: "${{ github.actor }}"
          BUF_INPUT_HTTPS_PASSWORD: "${{ github.token }}"
        with:
          input: "proto/internal"
          against: "https://github.com/github/spicedb.git#branch=main,subdir=proto/internal"
          buf_token: "${{ secrets.BUF_REGISTRY_TOKEN }}"
